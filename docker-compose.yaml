services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    restart: always
    depends_on:
      - frontend
      - backend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/letsencrypt/:ro  

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - VITE_API_URL=/api  # This will be the proxy path

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080  # Only need HTTP since Nginx handles HTTPS
      - ConnectionStrings__DefaultConnection=Host=db;Database=club;Username=postgres;Password=23jka2jk3na2ujk3ss
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - IMAP_USERNAME=${IMAP_USERNAME}
      - IMAP_PASSWORD=${IMAP_PASSWORD}
    depends_on:
      - db

  db:
    image: postgres:16
    container_name: postgres_db
    restart: always
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 23jka2jk3na2ujk3ss
      POSTGRES_DB: club
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
volumes:
  pgdata:
